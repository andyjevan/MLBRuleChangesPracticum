install.packages("stringr")
install.packages("stringr")
View(batting2023)
running2023 <- batting2023.games %>% select(Tm, G, SB, CS, GDP)
install.packages("magrittr")
running2023 <- batting2023.games %>% select(Tm, G, SB, CS, GDP)
library(magrittr)
running2023 <- batting2023.games %>% select(Tm, G, SB, CS, GDP)
library(dplyr)
librabry(tidyverse)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
running2023 <- batting2023.games %>% select(Tm, G, SB, CS, GDP)
running2023 <- batting2023 %>% select(Tm, G, SB, CS, GDP)
running2023full <- running2023 %>% mutate(fullSB = (G / 162))
running2023full <- running2023 %>% mutate(fullSB = (162 - G) * (SB/G))
running2023full <- running2023 %>% mutate(fullSB = ((162 - G) * (SB/G)) + SB)
running2023full <- running2023 %>% mutate(fullCS = ((162 - G) * (CS/G)) + CS)
running2023full <- running2023 %>% mutate(fullCS = ((162 - G) * (CS/G)) + CS) -> running2023full
running2023full <- running2023 %>% mutate(fullSB = ((162 - G) * (SB/G)) + SB) -> running2023full
View(running2023full)
running2023full <- running2023full %>% mutate(fullCS = ((162 - G) * (CS/G)) + CS) -> running2023full
running2023full <- running2023full %>% mutate(fullGDP = ((162 - G) * (CS/GDP)) + GDP) -> running2023full
running2023full <- running2023full %>% mutate(fullGDP = ((162 - G) * (GDP/G)) + GDP) -> running2023full
read.csv("data/teambatting2022.csv")
read.csv("data/teambatting2022.csv")
batting2022 <- read.csv("data/teambatting2022.csv")
running2022 <- batting2022 %>% select("Tm, G, SB, CS, GDP")
running2022 <- batting2022 %>% select(Tm, G, SB, CS, GDP)
View(running2022)
View(running2023)
View(running2022)
View(running2022)
babip2022 <- batting2022 %>% select(Tm, PA, AB, H, HR, K, SF)
babip2022 <- batting2022 %>% select(Tm, PA, AB, H, HR, SO, SF)
View(babip2022)
babip2022 <- babip2022 %>% mutate(babip = (H-HR)/(AB-SO-HR-SF))
babip2023 <- batting2023 %>% select(Tm, PA, AB, H, HR, K, SF)
babip2023 <- batting2023 %>% select(Tm, PA, AB, H, HR, SO, SF)
babip2023 <- babip2023 %>% mutate(babip = (H-HR)/(AB-SO-HR-SF))
View(babip2023)
View(babip2023)
attendance2023 <- read.csv("attendance.tsv")
attendance2023 <- read.csv("data/attendance.tsv")
attendance2023 <- read.csv("data/attendance.tsv", sep="\t")
attendance2022 <- read.csv("data/attendance2022.tsv", sep="\t")
View(attendance2022)
View(attendance2022)
View(attendance2023)
teamfielding2022 <- read.csv("data/teamfielding2022.csv")
teamfielding2023 <- read.csv("data/teamfielding2023.csv")
teamfielding2023 <- read.csv("data/teamfielding2023.csv")
ooa2023 <- read.csv("data/outs_above_average2023.csv")
ooa2022 <- read.csv("data/outs_above_average2022.csv")
alltimemisc <- read.csv("data/misc.csv")
View(alltimemisc)
ggplot(alltimemisc, aes(Year, Time)) +
gemo_point() +
geom_smooth()
library(ggplot2)
ggplot(alltimemisc, aes(Year, Time)) +
gemo_point() +
geom_smooth()
ggplot(alltimemisc, aes(Year, Time)) + geom_point() + geom_smooth()
ggplot(alltimemisc.Year[1:64], aes(Year, Time)) + geom_point() + geom_smooth()
ggplot(alltimemisc[1:64], aes(Year, Time)) + geom_point() + geom_smooth()
60spresmisc <- alltimemisc[1:64]
sixtiespresmisc <- alltimemisc[1:64]
ggplot(head(alltimemisc, 65), aes(Year, Time)) + geom_point() + geom_smooth()
babip2022 <- babip2022 %>% mutate(BA = H / AB)
install.packages("magrittr")
babip2022 <- babip2022 %>% mutate(BA = H / AB)
install.packages("tinyverse")
babip2022 <- babip2022 %>% mutate(BA = H / AB)
install.packages("dplyer")
babip2022 <- babip2022 %>% mutate(BA = H / AB)
install.packages("dplyr")
babip2022 <- babip2022 %>% mutate(BA = H / AB)
teamrecord2022 <- read.csv("data/teamrecord2022.csv")
teamrecord2023 <- read.csv("data/teamrecord2023.csv")
install.packages("tidyverse")
babip2022 <- babip2022 %>% mutate(BA = H / AB)
install.packages("dplyr")
install.packages("corrplot")
install.packages("corrplot")
install.packages("dplyr")
teamrecord2023 <- read.csv("data/teambatting2023.csv")
teamrecord2023 <- read.csv("data/teamrecord2023.csv")
teambatting2023 <- read.csv("data/teambatting2023.csv")
teambattingfiveyear <- read.csv("data/teambattingfiveyear.csv")
teambattingfiveyear <- read.csv("data/fiveyearbatting.csv")
View(teambattingfiveyear)
teambatting2023 <- teambatting2023 %>% mutate(Year = 2023)
install.packages("tidyverse")
teambatting2023 <- teambatting2023 %>% mutate(Year = 2023)
install.packages("dplyer")
teambatting2023 <- teambatting2023 %>% mutate(Year = 2023)
install.packages("magrittr")
install.packages("dplyr")
teambatting2023 <- teambatting2023 %>% mutate(Year = 2023)
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(ggplot2)
teambatting2023 <- teambatting2023 %>% mutate(Year = 2023)
rbind(teambatting2023, teambattingfiveyear)
teambatting <- rbind(teambatting2023, teambattingfiveyear)
View(teambatting)
teambatting <- teambatting %>% mutate(SBatt = SB + CS)
teambatting <- teambatting %>% mutate(BABIP = (H-HR)/(AB - HR - SO + SF))
teambatting <- teambatting %>% mutate(SBper = (SB)/(SBatt))
ggplot(teambatting, aes(x = Year, y = SBatt))
ggplot(teambatting, aes(x = Year, y = SBatt)) + ggcolm
ggplot(teambatting, aes(x = Year, y = SBatt)) + geo_col()
ggplot(teambatting, aes(x = Year, y = SBatt)) + geom_col()
teambatting %>% mutate(SBG = SB/G)
teambatting <- teambatting %>% mutate(SBG = SB/G)
ggplot(teambatting, aes(x = Year, y = SBatt)) + geom_col()
ggplot(teambatting, aes(x = Year, y = SBG)) + geom_col()
ggplot(teambatting, aes(x = Year, y = SBG)) + geom_col() + ylab("Stolen Bases per Game")
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game")
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + xlim(scale = 1)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + xlim(2017,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous()
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = c(2017,2018,2019,2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = label(2017,2018,2019,2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(label = c(2017,2018,2019,2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = (2017, 2018, 2019, 2021, 2022, 2023label = c(2017,2018,2019,2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = (2017, 2018, 2019, 2021, 2022, 2023, label = c(2017,2018,2019,2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = (2017, 2018, 2019, 2021, 2022, 2023), label = c(2017,2018,2019,2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = (2017, 2018, 2019, 2020,  2021, 2022, 2023), label = c(2017,2018,2019, 2020, 2021,2022,2023)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks = (2017, 2018, 2019, 2020,  2021, 2022, 2023))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1.0) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, .75) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, .75) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5,  .625,  .75))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, .75) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5,  .625, .75))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, .755) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5,  .625, .75, .875))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, .755) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5,  .625, .75))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5,  .625, .75))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + ylim(0.0, 1) + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5, .625, .75))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5, .625, .75))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.125, .25, .375, .5, .625, .75, .875))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  1)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
ggplot(teambatting, aes(x = Year, y = SBG/30), col = green) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
ggplot(teambatting, aes(x = Year, y = SBG/30), col = "green") + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col(col = "green") + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
ggplot(teambatting, aes(x = Year, y = SBatt)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
ggplot(teambatting, aes(x = Year, y = SBatt)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c())
ggplot(teambatting, aes(x = Year, y = SBper)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c())
ggplot(teambatting, aes(x = Year, y = SBper)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(0.5, 0.625, .75, .875, 1))
ggplot(teambatting, aes(x = Year, y = SBper/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(0.5, 0.625, .75, .875, 1))
ggplot(teambatting, aes(x = Year, y = SBper/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(0.5, 0.625, .75, .875, 1))  + ylim(0, 1.25)
ggplot(teambatting, aes(x = Year, y = SBper/30)) + geom_col() + ylab("Stolen Bases per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(0.5, 0.625, .75, .875, 1, 1.25))
ggplot(teambatting, aes(x = Year, y = SBper/30)) + geom_col() + ylab("Stolen Bases Percentage") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(0.5, 0.625, .75, .875, 1, 1.25))
ggplot(teambatting, aes(x = Year, y = SBG/30)) + geom_col() + ylab("Stolen Bases Attempted per Game") + scale_x_continuous(breaks =  c(2017, 2018, 2019, 2020, 2021, 2022, 2023)) + scale_y_continuous(breaks = c(.25, .5, .625, .75, .875)) + ylim(0.0,  .875)
teamattendance2022 <- read.csv("data/teamattendance2022.txt.csv")
teamattendance2022 <- read.csv("data/teamattendance2022.csv")
teamattendance2022 <- read.csv("data/teamattendance2022.csv")
teamattendance2023 <- read.csv("data/teamattendance2023.csv")
teamattendance2022 <- teamattendance2022 %>% mutate(Year = 2022)
teamattendance2023 <- teamattendance2023 %>% mutate(Year = 2023)
teamattendance <- rjoin(teamattendance2022, teamattendance2023)
teamattendance <- rbind(teamattendance2022, teamattendance2023)
teamattendance <- merge(teamattendance2022, teamattendance2023)
View(teamattendance)
View(teamattendance2022)
View(teamattendance2023)
teamattendance <- merge(teamattendance2022, teamattendance2023)
teamattendance <- merge(x = teamattendance2022, y = teamattendance2023)
teamattendance <- rbin(teamattendance2022, teamattendance2023)
teamattendance <- rbind(teamattendance2022, teamattendance2023)
View(teamattendance2022)
View(teamattendance2023)
gamelength <- read.csv("data/attendancelength.csv")
View(gamelength)
ggplot(gamelength, aes(x = "Year", y = "Time"))
ggplot(gamelength, aes(x = Year, y = Time))
ggplot(gamelength, aes(x = Year, y = Time)) + geom_point() + geom_smooth()
ggplot(gamelength, aes(x = Year, y = Time)) + geom_bar()
ggplot(gamelength, aes(x = Year, y = Time)) + geom_bar() + xlim(1973, 2023)
ggplot(gamelength, aes(x = Year, y = Time)) + geom_col() + xlim(1973, 2023)
gamelength <- gamelength  %>% mutate(TimeHHMM = as.Date(Time, format="%H%H%M%M"))
ggplot(gamelength, aes(x = Year, y = Time)) + geom_col() + xlim(1973, 2023)
ggplot(gamelength, aes(x = Year, y = TimeHHMM)) + geom_col() + xlim(1973, 2023)
gamelength <- gamelength  %>% mutate(TimeHHMM = as.Date(Time, format="%HH%MM"))
gamelength <- gamelength  %>% mutate(TimeHHMM = as.Date(Time, format="%H%M"))
gamelength <- gamelength  %>% mutate(TimeHHMM = as.Date(Time, format="%H,%M"))
attendance <- read.csv("data/attendance.csv")
View(attendance)
View(teamfielding2022)
View(teamfielding2023)
teamfielding2022 <- teamfielding2022 %>% mutate(Year = 2022)
teamfielding2023 <- teamfielding2023 %>% mutate(Year = 2023)
teamfielding <- rbind(teamfielding2023, teamfielding2022)
ggplot(teamfielding, aes(x = Year, y = E/G))
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col()
+ scale_x_continuous(2022, 2023)
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col() + scale_x_continuous(2022,   2023)
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col() + scale_x_continuous(2022, 2023)
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col() + scale_x_continuous(2022, 2023)
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col()
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col() +xlim(2022,2023)
ggplot(teamfielding, aes(x = Year, y = E/G)) + geom_col() +xlim(2021,2024)
ggplot(teamfielding, aes(x = Year, y = (E/G)/30) + geom_col() +xlim(2021,2024)
ggplot(teamfielding, aes(x = Year, y = (E/G)/30) + geom_col() +xlim(2021,2024)
ggplot(teamfielding, aes(x = Year, y = ((E/G)/30)) + geom_col() +xlim(2021,2024)
ggplot(teamfielding, aes(x = Year, y = ((E/G)/30)) + geom_col() +xlim(2021,2024)
ggplot(teamfielding, aes(x = Year, y = ((E/G)/30)) + geom_col() +xlim(2021,2024)
teamfielding
library(ggplot2)
ggplot(teamfielding, aes(x = Year, y = ((E/G)/30)) + geom_col() +xlim(2021,2024)
teamfielding <- teamfielding %>% mutate(EpG = E/G)
library(tidyverse)
library(dplyr)
teamfielding <- teamfielding %>% mutate(EpG = E/G)
ggplot(teamfielding, aes(x = Year, y = ((E/G)/30)) + geom_col() +xlim(2021,2024)
library(ggplot2)
library(ggplot2)
ggplot(teamfielding, aes(x = Year, y = ((E/G)/30)) + geom_col() +xlim(2021,2024)
ylim(0.0,.75)
ggplot(teamfielding, aes(x=Year, y = EpG/30)) + geom_col()
ggplot(teamfielding, aes(x=Year, y = EpG/30)) + geom_col() +ylab("Errors per Game")
ggplot(teamfielding, aes(x=Year, y = EpG/30)) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024)
ggplot(teamfielding, aes(x=Year, y = EpG/30)) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024) +ylim("0.0, 0.75")
ggplot(teamfielding, aes(x=Year, y = EpG/30)) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024) +ylim(0.0, 0.75)
ggplot(teamfielding, aes(x=Year, y = Fld./30)) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024) +ylim(0.0, 0.75)
View(teamfielding)
ggplot(teamfielding, aes(x=Year, y = Fld./30)) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024) +ylim(.75, .95)
ggplot(teamfielding, aes(x=Year, y = Fld./30)) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024) +ylim(.75, .95)
ggplot(teamfielding, aes(x=Year, y = Fld) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024)
.
ggplot(teamfielding, aes(x=Year, y = Fld.) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024)
.
ggplot(teamfielding, aes(x=Tm, y = Fld.) + geom_col() +ylab("Errors per Game")  + xlim(2021, 2024)
.
ggplot(teamfielding, aes(Tm, Fld., fill = Year)
.
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year)
.
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year))
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year)) + geom_bar
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year)) + geom_bar()
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year)) + geom_bar(stat="identity", position ="dodge")
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year)) + geom_bar(stat="identity", position ="dodge") + theme(aspect.ratio = 1/10)
ggplot(teamfielding, aes(Tm, "Fld.", fill = Year)) + geom_bar(stat="identity", position ="dodge") + theme(aspect.ratio = 1/5)
ggplot(teamfielding, aes(Tm, "Fld.")
)
ggplot(teamfielding, aes(Year, "Fld."/30)
)
ggplot(teamfielding, aes(Year, "Fld."/30)) + geom_col()
ggplot(teamfielding, aes(Year, Fld./30)) + geom_col()
alltimefielding <- read.csv("data/alltimefielding.csv")
alltimefielding <- read.csv("data/alltimefielding.csv")
View(alltimefielding)
View(alltimefielding)
ggplot(alltimefielding, aes(Year, Fld.)) + geom_col()
ggplot(alltimefielding, aes(Year, Fld.)) + geom_bar()
ggplot(alltimefielding, aes(Year, Fld.)) + geom_col()
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point()
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentarge")
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentage")
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentage") + ylim(1970,2023)
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentage") + xlim(1970,2023)
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentage") + xlim(1970,2023) + theme(aspect.ratio = 1/5)
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentage") + xlim(1970,2023) + theme(aspect.ratio = 1/2.5)
ggplot(alltimefielding, aes(Year, Fld.)) + geom_point() + ylab("Fielding Percentage") + xlim(1970,2023) + theme(aspect.ratio = 1/2)
ggplot(alltimefielding, aes(Year, E)) + geom_point() + ylab("Errors per Game") + xlim(1970,2023) + theme(aspect.ratio = 1/2)
attendance <- read.csv("data/teamattendance22v23.csv")
View(attendance)
attendance <- read.csv("data/teamattendance22v23.csv")
attendancetop5 <- attendance %>% select(X2022.Attend.G >= 30000)
attendance <- read.csv("data/teamattendance22v23.csv")
attendancetop5 <- attendance %>% select(X2022.Attend.G >= 30000)
attendancetop5 <- attendance %>% filter(X2022.Attend.G >= 30000)
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, X2023.Attend.G))
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col()
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col()
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col()
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col() + theme(aspect.ratio = 1/2)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/2)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/5)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1.5)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1.25)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1.25)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1.5)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1.1)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/2)
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/1.5)
ggplot(attendancetop5, aes(Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/5)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/5)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, fill = X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(y = Tm, X2023.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
ggplot(attendance, aes(y = Tm, X2023.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
attendanceno <- attendance %>% drop(Tm = "Total")
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G, X2023.Attend.G)) + geom_col(position="dodge") + theme(aspect.ratio = 1/.5)
ggplot(attendance, aes(y = Tm, X2023.Attend.G)) + geom_col(colo="blue") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(y = Tm, X2023.Attend.G)) + geom_col(col="blue") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(y = Tm, X2023.Attend.G)) + geom_col(fill="blue") + theme(aspect.ratio = 1/.5)
ggplot(attendancetop5, aes(y = Tm, X2023.Attend.G)) + geom_col(fill="blue") + theme(aspect.ratio = 1/.5) + ylab("Team")
ggplot(attendancetop5, aes(y = Tm, X2023.Attend.G)) + geom_col(fill="blue") + theme(aspect.ratio = 1/.5) + ylab("Team") +xlab("Attendance")
ggplot(attendancetop5, aes(y = Tm, X2022.Attend.G)) + geom_col(fill="blue") + theme(aspect.ratio = 1/.5) + ylab("Team") +xlab("Attendance")
ggplot(attendancetop5, aes(y = Tm, X2023.Attend.G)) + geom_col(fill="blue") + theme(aspect.ratio = 1/.5) + ylab("Team") +xlab("Attendance")
fullcorrelation <- read.csv("data/batting2023")
fullcorrelation <- read.csv("data/batting2023.csv")
fullcorrelation <- read.csv("data/teambatting2023.csv")
View(fullcorrelation)
fullcorrelation <- merge(fullcorrelation, running2023, by="Tm")
fullcorrelation <- read.csv("data/teambatting2023.csv")
fullcorrelation <- merge(fullcorrelation, running2023, by="Tm")
fullcorrelation <- merge(fullcorrelation, fielding2023, by="Tm")
fullcorrelation <- merge(fullcorrelation, teamattendance2023, by="Tm")
fullcorrelation <- merge(fullcorrelation, teamfielding2023, by="Tm")
teamfielding2023 <- read.csv("data/teamfielding2023.csv")
fullcorrelation <- merge(fullcorrelation, teamfielding2023, by="Tm")
fullcorrelation <- read.csv("data/teambatting2023.csv")
fullcorrelation <- merge(fullcorrelation, teamfielding2023, by="Tm")
fullcorrelation <- merge(fullcorrelation, teamattendance2023, by="Tm")
fullcorrelation <- fullcorrelation %>% select(Tm, Time, G, PA, AB, H, HR, SO, SB, CS, SF, RA.G, R, E, Fld.)
fullcorrelation <- fullcorrelation %>% select(Tm, Time, G.x, PA, AB, H, HR, SO, SB, CS, SF, RA.G, R, E, Fld.)
teamrecord2023 <- read.csv("data/teamrecord2023.csv")
View(teamrecord2022)
teamrecord2023 <- teamrecord2023 %>% select(Tm, W, L)
teamrecord2023 <- teamrecord2023[-31,]
View(teamrecord2022)
View(teamrecord2023)
fullcorrelation <- merge(fullcorrelation, teamrecord2023, by="Tm")
View(fullcorrelation)
round(fullcorrelation,2)
fullcorrelation <- fullcorrelation %>% mutate(minutes =  Time[-2,])
fullcorrelation <- fullcorrelation %>% mutate(minutes =  Time[-2])
fullcorrelation <- fullcorrelation %>% mutate(minutes =  substring(Time, 3))
fullcorrelation <- fullcorrelation %>% mutate(minutes =  strtoi(substring(Time, 3)))
fullcorrelation <- fullcorrelation %>% mutate(minutes =  strtoi(substring(Time, 3)) + 120)
fullcorrelation <- fullcorrelation %>% mutate(BABIP = ((H-HR)/(AB-HR-SO+SF)))
round(fullcorrelation,2)
fullcorrelation <- fullcorrelation %>% select(Minutes, H, R, RA.G, E, Fld., W, L, BABIP, SB, CS, G.x)
fullcorrelation <- fullcorrelation %>% select(minutes, H, R, RA.G, E, Fld., W, L, BABIP, SB, CS, G.x)
round(fullcorrelation, 2)
fullcorrelation
M <- cor(fullcorrelation)
round(2, M)
round(M, 2)
fullcorrelation <- fullcorrelation %>% mutate(SBper = SB/SB+CS)
fullcorrelation <- fullcorrelation %>% mutate(SBper = (SB/(SB+CS)))
fullcorrelation <- fullcorrelation %>% mutate(SBatt = SB+CS)
M <- cor(fullcorrelation)
round(M, 2)
library(corrplot)
corrplot(M, method="shade")
corrplot(M, method="shade", col=(colorRampPalette(c("blue", "white", "red"))))
corrplot(M, method="shade", col=(colorRampPalette(c("blue", "white", "red"))(20)))
corrplot(M, method="number", col=(colorRampPalette(c("blue", "white", "red"))(20)))
corrplot(M, method="number")
corrplot(M, method="number")
corrplot(M, method="number", col=(colorRampPalette(c("blue", "white", "red"))(20)))
corrplot(M, method="shade", col=(colorRampPalette(c("blue", "white", "red"))(20)))
fullcorrelation <- fullcorrelation %>% mutate(R.G = R/G)
fullcorrelation <- fullcorrelation %>% mutate(R.G = R/G.x)
M <- cor(fullcorrelation)
corrplot(M, method="shade", col=(colorRampPalette(c("blue", "white", "red"))(20)))
fullcorrelation <- fullcorrelation %>% select(W, R.G, H, Fld., BABIP, SBper, SBatt, E, RA.G, L)
M <- cor(fullcorrelation)
corrplot(M, method="shade", col=(colorRampPalette(c("blue", "white", "red"))(20)))
corrplot(M, method="number", col=(colorRampPalette(c("blue", "white", "red"))(20)))
fullcorrelationpergame <- fullcorrelation %>% mutate(H.G = H/G.x)
fullcorrelation <- read.csv("data/teambatting2023.csv")
fullcorrelation <- merge(fullcorrelation, teamfielding2023, by="Tm")
fullcorrelation <- merge(fullcorrelation, teamattendance2023, by="Tm")
View(alltimemisc)
View(gamelength)
View(teamrecord2022)
View(teamattendance2023)
View(fullcorrelation)
fullcorrelationcore <- fullcorrelation %>% select(W, G.x, R, H, HR, SO, SF, AB, PA, Fld., SB, CS, E, RA.G, L)
fullcorrelationcore <- merge(fullcorrelation, teamrecord2023, by ="Tm")
fullcorrelationcore <- fullcorrelation %>% select(W, G.x, R, H, HR, SO, SF, AB, PA, Fld., SB, CS, E, RA.G, L)
fullcorrelationcore <- fullcorrelationcore %>% select(W, G.x, R, H, HR, SO, SF, AB, PA, Fld., SB, CS, E, RA.G, L)
View(fullcorrelationcore)
fullcorrelationcore <- fullcorrelationcore %>% mutate(BABIP = ((H-HR)/(AB - SO - HR + SF)))
fullcorrelationcore <- fullcorrelationcore %>% mutate(SBatt = SB + CS)
fullcorrelationcore <- fullcorrelationcore %>% mutate(SBper = SB/SBatt)
fullcorrelationcore <- fullcorrelationcore %>% mutate(SBpG = SB/G)
fullcorrelationcore <- fullcorrelationcore %>% mutate(SBpG = SB/G.x)
fullcorrelationcore <- fullcorrelationcore %>% mutate(H.G = H/G.x)
fullcorrelationcore <- fullcorrelationcore %>% mutate(E.G = E/G.x)
matrixdata <- fullcorrelation %>% select(W, R.G, H.G, BABIP, Fld., SBper, SBpG, E.G, RA.G, L)
matrixdata <- fullcorrelationcore %>% select(W, R.G, H.G, BABIP, Fld., SBper, SBpG, E.G, RA.G, L)
fullcorrelationcore <- fullcorrelationcore %>% mutate(R.G = R/G.x)
matrixdata <- fullcorrelationcore %>% select(W, R.G, H.G, BABIP, Fld., SBper, SBpG, E.G, RA.G, L)
M <- corr(matrixdata)
M <- cor(matrixdata)
corrplot(M, method="shade", col=(colorRampPalette(c("blue", "white", "red"))(20)))
corrplot(M, method="number", col=(colorRampPalette(c("blue", "white", "red"))(20)))
lastyear <- read.csv("data/teamrecord2022.csv")
lastyear <- read.csv("data/teambatting2022.csv")
lastyear <- read.csv("data/teamfielding2022.csv")
lastyear <- read.csv("data/teamattendance2022.csv")
lastyear <- read.csv("data/teamrecord2022.csv")
lastyearfielding <- read.csv("data/teamfielding2022.csv")
lastyearattendance <- read.csv("data/teamattendance2022.csv")
lastbatting <- read.csv("data/teamfielding2022.csv")
lastbatting <- read.csv("data/teambatting2022.csv")
View(lastbatting)
View(lastbatting)
View(lastyearattendance)
View(matrixdata)
View(lastyear)
View(fullcorrelationcore)
lastyear <- read.csv("data/teamrecord2022.csv")
lastyearfielding <- read.csv("data/teamfielding2022.csv")
lastyearattendance <- read.csv("data/teamattendance2022.csv")
lastbatting <- read.csv("data/teambatting2022.csv")
lastyearstats <- merge(lastyear, lastyearfielding, by="Tm")
lastyearstats <- merge(lastyearattendance, lastbatting, by="Tm")
lastyearstats <- merge(lastyear, lastyearfielding, by="Tm")
lastyearstats <- merge(lastyearstats, lastyearbatting, by="Tm")
lastyearstats <- merge(lastyearstats, lastbatting, by="Tm")
lastyearstats <- merge(lastyearstats, lastyearattendance, by="Tm")
view(lastyearstats)
View(lastyearstats)
lastyearstats <- lastyearstats[order(lastyearstats$W)]
View(lastyearstats)
lastyearstats <- merge(lastyear, lastyearfielding, by="Tm")
lastyearstats <- merge(lastyearstats, lastyearbatting, by="Tm")
lastyearstats <- merge(lastyearstats, lastbatting, by="Tm")
lastyearstats <- merge(lastyearstats, lastyearattendance, by="Tm")
lastyearstats <- lastyearstats %>% mutate(BABIP = ((H-HR)/(AB - HR - SO + SF)))
library("tidyverse")
lastyearstats <- lastyearstats %>% mutate(BABIP = ((H-HR)/(AB - HR - SO + SF)))
library("dplyr")
library("ggplot2")
lastyearstats <- lastyearstats %>% mutate(SBatt = SB +CS)
lastyearstats <- lastyearstats %>% mutate(SBper = SB/SBatt)
lastyearstats <- lastyearstats
lastyearstats <- lastyearstats %>% mutate(MinuteTime = strtoi(Time[2:]))
lastyearstats <- lastyearstats %>% mutate(MinuteTime = strtoi(Time[2,]))
lastyearstats <- lastyearstats %>% mutate(MinuteTime = strtoi(substring(Time, 2)))
lastyearstats <- lastyearstats %>% mutate(MinuteTime = strtoi(substring(Time, 3)))
lastyearstats <- lastyearstats %>% mutate(Minute = case_when(MinuteTime == 58 ~ 178, MinuteTime <= 50 ~ MinuteTime + 180))
lastyearstats[is.na(lastyearstats)] <- 188
lastyearsmall <- lastyearstats %>% select(Tm, Rank, BABIP, SBatt, SBper, Minute, RA, R.x)
lastyearsmall <- lastyearstats %>% select(Tm, Rk, BABIP, SBatt, SBper, Minute, RA, R.x)
View(lastyearsmall)
write.csv(lastyearsmall, "C:\\Users\\Gilahead\\Desktop\\Bloomsburg\\Baseball\\LastYearRanking", row.names=TRUE)
write.csv(lastyearsmall, "C:\\Users\\Gilahead\\Desktop\\Bloomsburg\\Baseball\\LastYearRanking.csv", row.names=TRUE)
thisyearall <- read.csv("data/teamrecord2023.csv")
thisyearbatting <- read.csv("data/teambatting2023.csv")
thisyearfielding <- read.csv("data/teamfielding2023.csv")
thisyearattendance <- read.csv("data/attendance2023.csv")
View(thisyearall)
View(thisyearall)
thisyearbatting <- read.csv("data/teambatting2023_2.csv")
thisyear <- merge(thisyearall, thisyearbatting.csv)
thisyear <- merge(thisyearall, thisyearbatting, By="Tm")
thisyear <- merge(thisyear, thisyearfielding2023, By="Tm")
thisyear <- merge(thisyear, thisyearfielding, By="Tm")
thisyearattendance <- read.csv("data/teamattendance2023")
thisyearattendance <- read.csv("data/teamattendance2023.csv")
thisyear <- merge(thisyear, thisyearattendance, By="Tm")
View(thisyear)
thisyearall <- read.csv("data/teamrecord2023.csv")
View(teamrecord2023)
thisyear <- merge(thisyearbatting, thisyearfielding)
View(thisyear)
View(thisyearfielding)
View(thisyearbatting)
thisyearbatting <- read.csv("data/teambatting2023.csv")
thisyear <- merge(thisyearbatting, thisyearfielding)
View(thisyear)
thisyear <- merge(thisyear, teamrecord2023)
thisyear <- merge(thisyear, thisyearattendance)
thisyear <- thisyear %>% mutate(SBatt = SB +CS)
thisyear <- thisyear %>% mutate(SBper = SB / SBatt)
thisyear <- thisyear %>% mutate(BABIP = ((H-HR)/(AB-HR-SO+SF)))
lastyearstats <- lastyearstats %>% mutate(MinuteTime = strtoi(substring(Time, 3)) + 120)
thisyear <- thisyear %>% mutate(MinuteTime = strtoi(substring(Time, 3)) + 120)
thisyearsmall <- thisyear %>% select(Tm, Rank, BABIP, SBatt, SBper, Minute, RA, R.x)
thisyearsmall <- thisyear %>% select(Tm, Rk, BABIP, SBatt, SBper, Minute, RA, R.x)
thisyear <- thisyear %>% mutate(Wper = W / (W+L))
thisyearsmall <- thisyear %>% select(Tm, Wper, BABIP, SBatt, SBper, Minute, RA, R.x)
thisyearsmall <- thisyear %>% select(Tm, Wper, BABIP, SBatt, SBper, MinuteTime, RA, R.x)
thisyearsmall <- thisyear %>% select(Tm, Wper, BABIP, SBatt, SBper, MinuteTime)
write.csv(thisyearsmall, "C:\\Users\\Gilahead\\Desktop\\Bloomsburg\\Baseball\\ThisYearRanking.csv", row.names=TRUE)
thisyear <- merge(thisyearbatting, thisyearfielding)
thisyear <- merge(thisyear, thisyearattendance, by = "Tm")
thisyear <- merge(thisyear, teamattendance2023, by = "Tm")
thisyear <- thisyear %>% mutate(SBatt = SB +CS)
thisyear <- thisyear %>% mutate(SBper = SB / SBatt)
thisyear <- thisyear %>% mutate(BABIP = ((H-HR)/(AB-HR-SO+SF)))
thisyear <- thisyear %>% mutate(MinuteTime = strtoi(substring(Time, 3)) + 120)
thisyear <- thisyear %>% mutate(MinuteTime = strtoi(substring(Time.y, 3)) + 120)
thisyear <- thisyear %>% mutate(Wper = W / (W+L))
View(teamrecord2023)
thisyear <- merge(thisyear, teamrecord2023, By="Tm")
View(thisyear)
thisyearsmall <- thisyear %>% select(Tm, Wper, BABIP, SBatt, SBper, Minute)
thisyear <- thisyear %>% mutate(Wper = W / (W+L))
thisyearsmall <- thisyear %>% select(Tm, Wper, BABIP, SBatt, SBper, Minute)
thisyearsmall <- thisyear %>% select(Tm, Wper, BABIP, SBatt, SBper, MinuteTime)
write.csv(thisyearsmall, "C:\\Users\\Gilahead\\Desktop\\Bloomsburg\\Baseball\\ThisYearRanking.csv", row.names=TRUE)
write.csv(thisyearsmall, "C:\\Users\\Gilahead\\Desktop\\Bloomsburg\\Baseball\\ThisYearRankingUpdated.csv", row.names=TRUE)
